Глава 5 (Веб-сервисы и Брокеры сообщения)
	REST
		- Рекомендованная книга http://www.amazon.com/REST-Practice-Hypermedia-Systems-Architecture/dp/0596805829
		- Hypermedia as the Engine of Application State
		- Глагол и url могут определять следующее состояние для объекта, реализую стейт-машину
		- Используйте встроенный механизм кэширования
	Брокеры сообщения vs Веб-сервисы
		- Асинхронные запросы
		- Гарантированная доставка
		- Мониторинг
		- Процессинг ошибок
		- Производительность
		- НО! Не работает с брэндмауэром
	Есть возможность использовать REST для очередей
	
Глава 6(Фундаментальные принципы SOA)
	2 критерия SOA
		- Сервисы бизнес-уровня(разместить заказ, оплатить заказ)
		- Отделение бизнес-сервисов от корпоративных сервисов(внутренних сервисов компании)
	Пример сервиса, который не является бизнес-сервисом: для страховой компании сервис регистрации клиентов
	Типы сервисов для SOA: бизнес, корпоративный, приложения, инфраструктурный
	Бизнес-сервис должен быть абстрагирован от: имени, расположения, реализации, протокола, контракта
		Для этого требуется: реестр сервисов, преобразователь структуры сообщений, преобразователь формата сообщений, преобразователь протокола
	http://soa.sys-con.com/node/738704
	https://en.wikipedia.org/wiki/Service-oriented_architecture
	
Глава 7(Интеграционные шины)
	Чем сложнее топология компонент, тем потребность в интеграционной шине выше
	Примеры интеграционных шин: Camel, Mule, WebShere ESB, Oracle ESB
	Позволяет компонентам независимо изменяться
	Компромисс: уменьшения связности компонент приводит к усложнению развертывания
	Для отказоустойчивости нужно использовать федерализацию(???)
	Кастомный код в шине - скользкая дорожка(Slippery Slope)
	
Глава 8(ContDelivery 2)
	Текущая тенденция: уход от разделяемых ресурсов к обособленным компонентам
	Strangler Pattern
	ESB - умный роутер, но не более, иначе возникает сильная связанность
	Предпочитайте хореографию, а не дирижирование
	Решение проблемы сервиса с многими клиентами - Сonsumer Driven Contracts
		http://martinfowler.com/articles/consumerDrivenContracts.html
	Следите за зависимостями(визуализация зависимостей проектов)
	structure101 - Инструмент анализа
	JDepend позволяет писать юнит-тесты для проверки зависимостей java-пакетов
	Избегайте зависимостей в виде алмаза(diamond)
	martinfowler.com/ieeeSoftware/whoNeedsArchitect.pdf
	Есть статические и динамические элементы архитектуры
	Нет времени на рефакторинг - отдельная изменяющаяся команда архитекторов на рефакторинг!
	
Глава 9(Подходы к архитектуре корпоративных приложений)
	Централизованный подход
		Классический нормативный подход
		Классический альтернативный подход
	Децентрализованный подход
		Распределенный подход
			Уровни стандартов
		Подход устойчивого интерфейса
			Стандарты для коммуникации подразделений
				Такие стандарты тяжело изменять
	
	http://www.amazon.com/A-Practical-Guide-Enterprise-Architecture/dp/0131412752
	http://www.amazon.com/Real-Business-IT-Create-Communicate/dp/1422147614
	
Глава 10
	Декартовы координаты:  локальный-корпоративный ,тактический-стратегический
		4 зоны: ничего не решающая битва, решающая битва, осада, вторжение
		
Глава 11
	Стихийный дизайн
		Нахождение абстракций и паттернов в текущем коде
		Принимать решения, когда уже накоплен опыт и лучше понятен контекст(т.е. откладывать до определенной точки)
	Технический долг
		http://martinfowler.com/bliki/TechnicalDebtQuadrant.html
		
	